names(dados)
names(dados) = c('linha', 'empresas', 'rendimento', 'tamanho', 'vendas', 'palavra', 'fre_palavra')
head(dados)
#Retorna a quantidade de empresas de cada tipo em uma tabela
table(dados$empresas)
#Média de rendimentos por empresa
#          valores                  por          medida
tapply(dados$redimento, dadosPlot$empresas, mean)
library(ggplot2)
ggplot(dados, aes(x=empresas))
(dados = read.csv('dados_plot.csv', sep = ',', dec = '.', header = TRUE))
head(dados)
names(dados)
names(dados) = c('linha', 'empresas', 'rendimento', 'tamanho', 'vendas', 'palavra', 'fre_palavra')
head(dados)
#Retorna a quantidade de empresas de cada tipo em uma tabela
table(dados$empresas)
#Média de rendimentos por empresa
#          valores                  por          medida
tapply(dados$redimento, dadosPlot$empresas, mean)
ggplot(dados, aes(x=empresas)) + geom_bar()
ggplot(dados, aes(x=empresas)) + geom_bar() + coord_flip()
ggplot(dados, aes(x=empresas)) + geom_bar() + coord_flip() + geom_curve()
ggplot(dados, aes(x=empresas)) + geom_bar() + coord_flip()
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar()
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labels(title = 'Titulo', x = 'Empresas', y = 'Total')
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total')
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip()
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'Set3')
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'Greys')
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'Greys') + theme_minimal()
ggplot(dados, aes(x=empresas, fill=tamanho)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'Greys') + theme_minimal()
ggplot(dados, aes(x=empresas, fill=tamanho)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'YlGn') + theme_minimal()
ggplot(dados, aes(x=empresas, fill=tamanho)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'YlGn') + theme_minimal() + facet_wrap(~tamanho)
ggplot(dados, aes(x=empresas, fill=tamanho)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
scale_fill_brewer(palette = 'YlGn') + theme_minimal() + facet_wrap(~tamanho)
#### grafico de dispersão ####
ggplot(dados, aes(x=redimento, y=vendas)) + geom_point()
#### grafico de dispersão ####
ggplot(dados, aes(x=rendimento, y=vendas)) + geom_point()
ggplot(dados, aes(x=rendimento, y=vendas)) + geom_point() + geom_smooth()
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth()
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth(se=FALSE)
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth()
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth(se=FALSE)
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~empresas)
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~empresas) + theme_classic()
dados1 = as.data.frame(table(dados$empresas))
table(dados$empresas)
dados1 = as.data.frame(table(dados$empresas))
dados1
names(dados1)[1] = 'Empresa'
dados1
dados2$freq = round(dados2$Freq/sum(dados2$Freq), 3)
dados2 = dados1
dados2$freq = round(dados2$Freq/sum(dados2$Freq), 3)
dados2
sum(dados2$freq)
dados2$cum = cumsum(dados2$freq)
dados2
dados2 = dados1
dados2$Freq = round(dados2$Freq/sum(dados2$Freq), 3)
dados2$cum = cumsum(dados2$Freq)
dados2
ggplot(dados2, aes(x ="", y = Freq,fill = empresa)) +  geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")
ggplot(dados2, aes(x ="", y = Freq,fill = empresas)) +  geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")
table(dados$empresas)
dados1 = as.data.frame(table(dados$empresas))
names(dados1)[1] = 'Empresa'
dados2 = dados1
dados2$Freq = round(dados2$Freq/sum(dados2$Freq), 3)
dados2$cum = cumsum(dados2$Freq)
ggplot(dados2, aes(x ="", y = Freq,fill = empresas)) +  geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")
dados2
ggplot(dados2, aes(x ="", y = Freq,fill = empresa)) +  geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")
ggplot(dados2, aes(x ="", y = Freq,fill = Empresa)) +  geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")
#text: geom_text()
ggplot(dados2, aes(x ="", y = Freq,fill = Empresa)) +
geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")+geom_text(aes(y = cum-0.2, label = Freq), color ="black")
ggplot(dados2, aes(x ="", y = Freq,fill = Empresa)) +
geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")+geom_text(aes(y = cum-0.2, label = Freq), color ="black")
ggplot(dados2, aes(x ="", y = Freq,fill = Empresa)) +
geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")+geom_text(aes(y = cum-0.2, label = Freq), color ="black") + xlim(0.5, 2.5)
ggplot(dados2, aes(x ="", y = Freq,fill = Empresa)) +
geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")+geom_text(aes(y = cum-0.2, label = Freq), color ="black") + xlim(0.5, 2.5)
ggplot(dados2, aes(x =2, y = Freq,fill = Empresa)) +
geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")+geom_text(aes(y = cum-0.2, label = Freq), color ="black") + xlim(0.5, 2.5)
install.packages("ggplot2")
library(ggplot2)
ggplot(dados2, aes(rendimento)) + geom_histogram()
(dados = read.csv('dados_plot.csv', sep = ',', dec = '.', header = TRUE))
names(dados) = c('linha', 'empresas', 'rendimento', 'tamanho', 'vendas', 'palavra', 'fre_palavra')
head(dados)
ggplot(dados, aes(rendimento)) + geom_histogram(aes(fill=empresa), bins=5)
ggplot(dados, aes(rendimento)) + geom_histogram()
ggplot(dados, aes(rendimento)) + geom_histogram(bins = 5)
ggplot(dados, aes(rendimento)) + geom_histogram(bins = 5, fill='orange')
ggplot(dados, aes(rendimento)) + geom_histogram(aes(fill=empresas), bins=5)
#### grafico histograma ####
#Utiliza para valores continuos
ggplot(dados, aes(rendimento)) + geom_histogram()
#aes(fill= empresa)
ggplot(dados, aes(rendimento)) + geom_histogram(aes(fill=empresas), bins=5)
#### grafico de densidade ####
#Utiliza-se para valores continuos também
ggplot(dados, aes(rendimento)) + geom_density()
#por empreas aes(fill=factor(empresa))
ggplot(dados, aes(rendimento)) + geom_density(aes(fill=factor(empresa)))
#por empreas aes(fill=factor(empresa))
ggplot(dados, aes(rendimento)) + geom_density(aes(fill=factor(empresa)))
#por empreas aes(fill=factor(empresa))
ggplot(dados, aes(rendimento)) + geom_density(aes(fill=factor(empresas)))
#transparencia: (alpha=)
ggplot(dados, aes(rendimento)) + geom_density(aes(fill=factor(empresas)),alpha=0.5)
#### grafico boxplot ####
#Utiliza-se para valores continuos
ggplot(dados, aes(y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x-empresa, y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresa, y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresa)) + geom_boxplot() + facet_wrap(~tamanho)
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresa)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot() + facet_wrap(~tamanho)
#### grafico violino ####
#utiliza-se para valores continuos
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_violin()
#### grafico violino ####
#utiliza-se para valores continuos
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_violin()
ggplot(dados, aes(x=rendimento, y=empresa, fill=empresas)) + geom_violin()
#### grafico violino ####
#utiliza-se para valores continuos
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_violin()
ggplot(dados, aes(x=rendimento, y=empresas, fill=empresas)) + geom_violin()
#### grafico violino ####
#utiliza-se para valores continuos
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_violin()
ggplot(dados, aes(x=rendimento, y=empresas, fill=empresas)) + geom_violin()
install.packages("treemapify")
library(treemapify)
####rendimento medio por tamanho x empresa####
dados$interacao = interaction(dados$tamanho, dados$empresas)
dados
table(dados$empresas)
dados1 = as.data.frame(table(dados$empresas))
names(dados1)[1] = 'Empresa'
dados1
####rendimento medio por tamanho x empresa####
dados1$interacao = interaction(dados$tamanho, dados$empresas)
####rendimento medio por tamanho x empresa####
dados1$interacao = interaction(dados1$tamanho, dados1$empresas)
####rendimento medio por tamanho x empresa####
dados$interacao = interaction(dados$tamanho, dados$empresas)
dados
ggplot(dados, aes(area=Freq, fill=empresas)) + geom_treemap()
ggplot(dados1, aes(area=Freq, fill=empresas)) + geom_treemap()
ggplot(dados1, aes(area=Freq, fill=Empresa)) + geom_treemap()
dados3 = as.data.frame(tapply(dados$rendimento, dados$interacao, mean))
dados3
dados3$nomes = labels(dados3)[1]
dados3
names(dados3)[1] ='Total'
dados3
ggplot(dados3, aes(area=total, fill=nomes)) + geom_treemap()
names(dados3)[1] ='total'
ggplot(dados3, aes(area=total, fill=nomes)) + geom_treemap()
dados$interacao = interaction(dados$tamanho, dados$empresas)
ggplot(dados1, aes(area=Freq, fill=Empresa)) + geom_treemap()
dados3 = as.data.frame(tapply(dados$rendimento, dados$interacao, mean))
dados3$nomes = labels(dados3)[1]
names(dados3)[1] ='total'
ggplot(dados3, aes(area=total, fill=nomes)) + geom_treemap()
dados
dados3
dados$interacao = interaction(dados$tamanho, dados$empresas)
dados$interacao = interaction(dados$tamanho, dados$empresas)
tapply(dados$rendimento, dados$interacao, mean)
dados3 = as.data.frame(tapply(dados$rendimento, dados$interacao, mean))
dados3
names(dados3)[1] ='total'
dados3
dados3$nomes = labels(dados3)[1]
dados3
dados$interacao = interaction(dados$tamanho, dados$empresas)
dados3 = as.data.frame(tapply(dados$rendimento, dados$interacao, mean))
names(dados3)[1] ='total'
dados3
labels(dados3)[1]
labels(dados3)[[1]]
dados3$nomes = labels(dados3)[[1]]
dados3
ggplot(dados3, aes(area=total, fill=nomes)) + geom_treemap()
install.packages("wordcloud2")
library(wordcloud2)
dados4 = dados[,6:7]
wordcloud2(data=dados4, size=1.6)
dados4
####Bibliotecas####
install.packages("mosaicCalc")
install.packages("ggplot2")
install.packages("treemapify")
install.packages("gganimate")
install.packages("gifski")
install.packages("png")
library(mosaicCalc)
library(ggplot2)
library(treemapify)
library(gganimate)
library(gifski)
library(png)
head(dados_p)
dados_p = read.csv("dados1_prova.csv");
head(dados_p)
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho))
####Prova1####
ggplot(dados_p, aes(x=fabricante, y= tamanho, fill=tamanho))
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho))
#### grafico de coluna / linha ####
ggplot(dados, aes(x=empresas))
ggplot(dados, aes(x=empresas)) + geom_bar()
ggplot(dados, aes(x=empresas)) + geom_bar() + coord_flip()
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar()
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip()
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'Greys')
ggplot(dados, aes(x=empresas, fill=empresas)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
coord_flip() + scale_fill_brewer(palette = 'Greys') + theme_minimal()
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho))
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho)) + geom_bar()
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho)) + geom_bar()
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho)) + geom_bar() + labs(title = 'Empresas x Tamanho', x = 'Empresas', y = 'Tamanhos')
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho)) + geom_bar() + labs(title = 'Empresas x Tamanho', x = 'Empresas', y = 'Tamanhos') +
scale_fill_brewer(palette = 'YlGn')
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho)) + geom_bar() + labs(title = 'Fabricante x Tamanho', x = 'Empresas', y = 'Tamanhos') +
scale_fill_brewer(palette = 'YlGn')
####Prova1####
ggplot(dados_p, aes(x=fabricante, fill=tamanho)) + geom_bar() + labs(title = 'Fabricante x Tamanho', x = 'Fabricante', y = 'Tamanhos') +
scale_fill_brewer(palette = 'YlGn')
ggplot(dados_p, aes(x=fabricante, y=tamanho, fill=resistencia)) + geom_boxplot()
ggplot(dados_p, aes(x=fabricante, y=tamanho, fill=resistencia)) + geom_boxplot()
ggplot(dados_p, aes(x=fabricante, y=tamanho, fill=resistencia)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot() + facet_wrap(~tamanho)
#### grafico boxplot ####
#Utiliza-se para valores continuos
ggplot(dados, aes(y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, fill=tamanho)) + geom_bar() + labs(title = 'Titulo', x = 'Empresas', y = 'Total') +
scale_fill_brewer(palette = 'YlGn') + theme_minimal() + facet_wrap(~tamanho)
#### grafico boxplot ####
#Utiliza-se para valores continuos
ggplot(dados, aes(y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot()
dados
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot() + facet_wrap(~tamanho)
#### grafico boxplot ####
#Utiliza-se para valores continuos
ggplot(dados, aes(y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot()
ggplot(dados_p, aes(x=fabricante, y=tamanho, fill=resistencia)) + geom_boxplot()
ggplot(dados_p, aes(x=fabricante, y=resistencia, fill=tamanho)) + geom_boxplot()
ggplot(dados_p, aes(x=resistencia, y=empresa, fill=tamanho)) + geom_boxplot()
ggplot(dados_p, aes(x=resistencia, y=frabricante, fill=tamanho)) + geom_boxplot()
head(dados_p)
ggplot(dados_p, aes(x=resistencia, y=fabricante, fill=tamanho)) + geom_boxplot()
ggplot(dados_p, aes(x = fabricante, fill=resistencia)) + geom_boxplot()
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot() + facet_wrap(~tamanho)
ggplot(dados, aes(x=fabricante, y=resistencia, fill=fabricante)) + geom_boxplot() + facet_wrap(~tamanho)
ggplot(dados_p, aes(x=fabricante, y=resistencia, fill=fabricante)) + geom_boxplot() + facet_wrap(~tamanho)
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_boxplot() + facet_wrap(~tamanho)
dados
ggplot(dados_p, aes(x=tamanho, y=resistencia, fill=fabricante)) + geom_boxplot()
ggplot(dados_p, aes(x=tamanho, y=resistencia) + geom_boxplot()
ggplot(dados_p, aes(x=tamanho, y=resistencia) + geom_boxplot()
ggplot(dados_p, aes(x=tamanho, y=resistencia) + geom_boxplot()
ggplot(dados_p, aes(x=tamanho, y=resistencia)) + geom_boxplot()
ggplot(dados_p, aes(x=tamanho, y=resistencia)) + geom_boxplot()
ggplot(dados_p, aes(x=resistencia, y=tamanho)) + geom_boxplot()
#### grafico boxplot ####
#Utiliza-se para valores continuos
ggplot(dados, aes(y=rendimento)) + geom_boxplot()
ggplot(dados_p, aes(y=resistencia)) + geom_boxplot()
####Prova1####
dados_p = read.csv("dados1.csv");
head(dados_p)
ggplot(dados_p, aes(y=resistencia)) + geom_boxplot()
ggplot(dados_p, aes(x = fabricante, y=resistencia, fill = fabricante)) + geom_boxplot() + facet_wrap(~tamanho)
ggplot(dados_p, aes(x = fabricante, y=resistencia, fill = fabricante)) + geom_boxplot() + facet_wrap(~tamanho) +
labs(title='Resistencia x Frabricante', x = 'Fabricante', y = 'Resistencia')
interacao=interaction(dados$fabricante,dados$tamanho)
interacao
dados1=as.data.frame(tapply(dados$resistencia, interacao, mean))
dados1=as.data.frame(tapply(dados$resistencia, interacao, mean))
interacao=interaction(dados$fabricante,dados$tamanho)
dados1=as.data.frame(tapply(dados$resistencia, interacao, mean))
dados1=as.data.frame(tapply(dados$resistencia, interacao, mean(resistencia)))
interacao=interaction(dados_p$fabricante,dados_p$tamanho)
interacao
dados1=as.data.frame(tapply(dados_p$resistencia, interacao, mean))
d1$fabricante_tamanho=labels(d1)[[1]]
dados1$fabricante_tamanho=labels(dados1)[[1]]
dados1$fabricante_tamanho
dados1
dados1&media_resistencia = labels(dados1)[[0]]
dados1
labels(dados1)[1]
labels(dados1)[1]
labels(dados1)[[1]]
labels(dados1)[[2]]
dados1&media_resistencia = labels(dados1)[[2]]
dados1
dados1 = as.data.frame(table(dados$empresas))
dados1
names(dados1)[1]
dados1=as.data.frame(tapply(dados_p$resistencia, interacao, mean))
names[dados1][1]
dados1
dados1$fabricante_tamanho=labels(dados1)[[1]]
interacao=interaction(dados_p$fabricante,dados_p$tamanho)
dados1=as.data.frame(tapply(dados_p$resistencia, interacao, mean))
dados1
interacao=interaction(dados_p$fabricante,dados_p$tamanho)
dados1=as.data.frame(tapply(dados_p$resistencia, interacao, mean))
dados1$fabricante_tamanho=labels(dados1)[[1]]
dados1
dados1
names[dados1]
names[dados1][2]
names[dados1][[1]]
labels(dados1)[1]
labels(dados1)[[1]]
labels(dados1)[[2]]
labels(dados1)[[2]][1]
dados1$media_resistencia = labels(dados1)[[2]][1]
dados1
interacao=interaction(dados_p$fabricante,dados_p$tamanho)
dados1=as.data.frame(tapply(dados_p$resistencia, interacao, mean))
dados1$fabricante_tamanho=labels(dados1)[[1]]
dados1
ggplot(dados1,aes(x=fabricante))
dados$interacao = interaction(dados$tamanho, dados$empresas)
dados3 = as.data.frame(tapply(dados$rendimento, dados$interacao, mean))
names(dados3)[1] ='total'
dados3
dados3$nomes = labels(dados3)[[1]]
dados3
ggplot(dados3, aes(area=total, fill=nomes)) + geom_treemap()
names(dados1)[1] = 'media'
dados1
dados3
ggplot(dados3, aes(area=media, fill=fabricante_tamanho)) + geom_treemap()
ggplot(dados1, aes(area=media, fill=fabricante_tamanho)) + geom_treemap()
dados1$Fabricante_Tamanho=labels(dados1)[[1]]
names(dados1)[1] = 'media'
ggplot(dados1, aes(area=media, fill=fabricante_tamanho)) + geom_treemap()
dados1
interacao=interaction(dados_p$fabricante,dados_p$tamanho)
dados1=as.data.frame(tapply(dados_p$resistencia, interacao, mean))
dados1$Fabricante_Tamanho=labels(dados1)[[1]]
names(dados1)[1] = 'media'
ggplot(dados1, aes(area=media, fill=Fabricante_Tamanho)) + geom_treemap()
ggplot(dados1, aes(area=media, fill=Fabricante_Tamanho)) + geom_treemap() + labs(title = 'Média de Resistência de produtos')
ggplot(dados1, aes(area=media, fill=Fabricante_Tamanho)) + geom_treemap() + labs(title = 'Média de Resistência de Produtos')
ggplot(dados1, aes(area=media, fill=Fabricante_Tamanho)) + geom_treemap() + labs(title = 'Média de Resistência de Produtos') +
scale_fill_brewer(palette = 'YlGn')
ggplot(dados2, aes(x =2, y = Freq,fill = Empresa)) +
geom_bar(width = 1, stat="identity") + coord_polar("y",start = 0) +
scale_fill_brewer(palette="Set3")+geom_text(aes(y = cum-0.2, label = Freq), color ="black") + xlim(0.5, 2.5)
ggplot(dados1, aes(area=media, fill=Fabricante_Tamanho)) + geom_treemap() + labs(title = 'Média de Resistência de Produtos') +
scale_fill_brewer(palette = "Set3")
head(dados_p)
ggplot(dados_p, aes(x = tempo, y = peso)) + geom_point()
ggplot(dados, aes(x=rendimento, y=vendas)) + geom_point() + geom_smooth()
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth()
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth(se=FALSE)
ggplot(dados, aes(x=rendimento, y=vendas, col=empresas)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~empresas) + theme_classic()
ggplot(dados_p, aes(x=tempo, y=peso, col=fabricante)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~tamanho) + theme_classic()
ggplot(dados_p, aes(x=tempo, y=peso, col=fabricante)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~tamanho)
ggplot(dados_p, aes(x=tempo, y=peso, col=fabricante)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~fabricante) + theme_classic()
ggplot(dados_p, aes(x=tempo, y=peso, col=tamanho)) + geom_point() + geom_smooth(se=FALSE) +
facet_wrap(~fabricante) + theme_classic()
ggplot(dados_p, aes(x=tempo, y=peso, col=tamanho)) + geom_point() + geom_smooth(se=FALSE) +
theme_classic()
ggplot(dados_p, aes(x= resistencia, y= fabricante)) + geom_point()
ggplot(dados_p, aes(x= resistencia)) + geom_point()
dados
#### grafico violino ####
#utiliza-se para valores continuos
ggplot(dados, aes(x=empresas, y=rendimento, fill=empresas)) + geom_violin()
ggplot(dados, aes(x=rendimento, y=empresas, fill=empresas)) + geom_violin()
ggplot(dados_p, aes(x=resistencia, y=fabricante, fill=fabricante)) + geom_violin()
ggplot(dados_p, aes(x=fabricante, y=resistencia, fill=fabricante)) + geom_violin()
ggplot(dados_p, aes(x=tempo, y=peso, col=tamanho)) + geom_point() + geom_smooth(se=FALSE) +
theme_classic()
ggplot(dados_p, aes(x=tempo, y=peso, col=tamanho)) + geom_point() + geom_smooth(se=FALSE) +
theme_classic() + labs(title = 'Tempo x Peso', x = 'Tempo', y = 'Peso')
ggplot(dados_p, aes(x=fabricante, y=resistencia, fill=fabricante)) + geom_violin()
ggplot(dados_p, aes(x=fabricante, y=resistencia, fill=fabricante)) + geom_violin() +
labs(titles = 'Resistência x Fabricante', x = 'Fabricante', y = 'Tamanho')
Fabricante
ggplot(dados_p, aes(x=fabricante, y=resistencia, fill=fabricante)) + geom_violin() +
labs(titles = 'Resistência x Fabricante', x = 'Fabricante', y = 'Resistência')
####Bibliotecas####
install.packages("mosaicCalc")
install.packages("ggplot2")
library(mosaicCalc)
library(ggplot2)
library(treemapify)
library(gganimate)
library(gifski)
library(png)
####Modelo Binominal####
qbinom(2, 5, 1/3)
####Modelo Binominal####
qbinom(2, 5, (1/3))
####Modelo Binominal####
dbinom(2, 5, (2/6))
dbinom(0:5, 5, (2/6))
#
pbinom(2, 5, (2/6))
#qbinom()
qbinom(0.7901, 5, (2/6))
#rbinom
rbinom(10, 5, (2/6))
####Modelo Binominal####
#dbinom(quantidade de sucessos, quantidade de tentativas, probabilidade de sucesso)
dbinom(2, 5, (2/6))
dbinom(0:5, 5, (2/6))
#Gráficos
##Criando base de dados
x = 0:5
px = dbinom(x, 5, 2/6)
dados = data.frame(x, px)
dados
##Gerando o grafico
dados[0]
##Gerando o grafico
ggplot(dados, aes(x, px)) + geom_col()
px = dbinom(5, 5, 2/6)
dados = data.frame(x, px)
##Gerando o grafico
ggplot(dados, aes(x, px)) + geom_col()
px = pbinom(5, 5, 2/6)
dados = data.frame(x, px)
##Gerando o grafico
ggplot(dados, aes(x, px)) + geom_col()
px = pbinom(5, 5, 2/6)
dados = data.frame(x, px)
##Gerando o grafico
ggplot(dados, aes(x, px)) + geom_col()
px = pbinom(x, 5, 2/6)
dados = data.frame(x, px)
##Gerando o grafico
ggplot(dados, aes(x, px)) + geom_col()
dados
####Modelo Poisson####
dpois(35, 40)
#ppois(probabilidade ou menos, media)
ppois(45, 40)
#ppois(probabilidade ou menos, media)
sum(dpois(0:45, 40))
dpois(0:480, 40)
#qpois(valor da probabilidade, media)
qpois(0.8096, 40)
#rpoid(amostra, media)
rpois(10,40)
ggplot(dados, aes(x, px)) + geom_col()
##Grafico
x = 0:480;
px = dpois(x, 45)
dados = data.frame(x, px)
ggplot(dados, aes(x, px)) + geom_col()
##Grafico
x = 0:100;
px = dpois(x, 45)
dados = data.frame(x, px)
ggplot(dados, aes(x, px)) + geom_col()
